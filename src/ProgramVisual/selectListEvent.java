/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProgramVisual;

import static ProgramVisual.Login.txtpassword;
import static ProgramVisual.Login.txtusername;
import static ProgramVisual.MenuPendaftar.pn_utama;
import database.KoneksiDatabase;
import database.MuskelDatabase;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dower
 */
public class selectListEvent extends javax.swing.JPanel {
    private Connection con = null;
    private Statement st = null;
    /**
     * Creates new form NewJPanel
     */
    public selectListEvent() {
        initComponents();
        data();
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost/p_visual", "root", "");
//            st = con.createStatement();
//            
//            tampil();
//        } catch(Exception e) {
//            JOptionPane.showMessageDialog(null, "Data Kosong Silakan Input Terlebih Dahulu");
//        }
    }

    protected void kosong() {
        listEvent.setText("");
    }
            
    private void tampil() {
        try {
            String sqlSearch = ("SELECT * FROM login WHERE nokk = '"+txtusername.getText()+"' AND password = '"+String.valueOf(txtpassword.getPassword())+"'");
            java.sql.ResultSet rs = st.executeQuery(sqlSearch);
            Boolean strreq = rs.next();
            String id = rs.getString(1);

            String sqldata = ("SELECT * FROM event WHERE id=0");
            java.sql.ResultSet result = st.executeQuery(sqldata);
            Boolean str = result.next();
            String idx = result.getString(2);
            listEvent.setText(idx);
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Data Kosong Silakan Input Terlebih Dahulu");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel3 = new javax.swing.JPanel();
        tableTanggalLahir = new Function.PanelRound();
        deleteTable = new javax.swing.JLabel();
        judul4 = new javax.swing.JLabel();
        update = new Function.RoundButton();
        btnregis1 = new Function.RoundButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jPanel3.setBackground(new java.awt.Color(227, 245, 245));
        jPanel3.setPreferredSize(new java.awt.Dimension(710, 659));
        jPanel3.setLayout(null);

        tableTanggalLahir.setBackground(new java.awt.Color(255, 255, 255));
        tableTanggalLahir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        tableTanggalLahir.setRoundBottomLeft(20);
        tableTanggalLahir.setRoundBottomRight(20);
        tableTanggalLahir.setRoundTopLeft(20);
        tableTanggalLahir.setRoundTopRight(20);

        listEvent.setBorder(null);
        listEvent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listEventFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                listEventFocusLost(evt);
            }
        });
        listEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listEventActionPerformed(evt);
            }
        });

        deleteTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/icons8_trash_29px_2.png"))); // NOI18N
        deleteTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tableTanggalLahirLayout = new javax.swing.GroupLayout(tableTanggalLahir);
        tableTanggalLahir.setLayout(tableTanggalLahirLayout);
        tableTanggalLahirLayout.setHorizontalGroup(
            tableTanggalLahirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableTanggalLahirLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(listEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tableTanggalLahirLayout.setVerticalGroup(
            tableTanggalLahirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableTanggalLahirLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(tableTanggalLahirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listEvent)
                    .addComponent(deleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.add(tableTanggalLahir);
        tableTanggalLahir.setBounds(20, 50, 270, 30);

        judul4.setBackground(new java.awt.Color(102, 102, 102));
        judul4.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        judul4.setForeground(new java.awt.Color(102, 102, 102));
        judul4.setText("CREATE MUSKEL");
        jPanel3.add(judul4);
        judul4.setBounds(21, 19, 190, 20);

        update.setBackground(new java.awt.Color(45, 105, 141));
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.setBorderColor(new java.awt.Color(45, 105, 141));
        update.setColor(new java.awt.Color(45, 105, 141));
        update.setColorClick(new java.awt.Color(45, 105, 141));
        update.setColorOver(new java.awt.Color(45, 105, 141));
        update.setRadius(10);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateKeyPressed(evt);
            }
        });
        jPanel3.add(update);
        update.setBounds(380, 50, 70, 30);

        btnregis1.setBackground(new java.awt.Color(45, 105, 141));
        btnregis1.setForeground(new java.awt.Color(255, 255, 255));
        btnregis1.setText("Save");
        btnregis1.setBorderColor(new java.awt.Color(45, 105, 141));
        btnregis1.setColor(new java.awt.Color(45, 105, 141));
        btnregis1.setColorClick(new java.awt.Color(45, 105, 141));
        btnregis1.setColorOver(new java.awt.Color(45, 105, 141));
        btnregis1.setRadius(10);
        btnregis1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregis1ActionPerformed(evt);
            }
        });
        btnregis1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnregis1KeyPressed(evt);
            }
        });
        jPanel3.add(btnregis1);
        btnregis1.setBounds(300, 50, 70, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

        
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        updateEvemt();
    }//GEN-LAST:event_updateActionPerformed

    private void updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateKeyPressed
        updateEvemt();
    }//GEN-LAST:event_updateKeyPressed

    private void deleteTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTableMouseClicked
        con = new KoneksiDatabase().connect();
        String delete = "DELETE FROM muskel WHERE muskel.id = "+id+"";
        try {
            st = con.createStatement();
            int rs = st.executeUpdate(delete);
            if (rs == 1) {
                JOptionPane.showMessageDialog(this, "Berhasil Hapus Data :"+nama);
                data();
            }
        } catch (SQLException ex) {
            Logger.getLogger(selectListEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost/p_visual", "root", "");
//            st = con.createStatement();
//
//            String sqlSearch = ("SELECT * FROM login WHERE nokk = '"+txtusername.getText()+"' AND password = '"+String.valueOf(txtpassword.getPassword())+"'");
//            java.sql.ResultSet rs = st.executeQuery(sqlSearch);
//            Boolean strreq = rs.next();
//
//            String id = rs.getString(1);
//            int ok = JOptionPane.showConfirmDialog(null, "Hapus?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
//            if (ok == 0) {
//                String sqldata = ("delete from event where id=0");
//                PreparedStatement stat = con.prepareStatement(sqldata);
//                stat.executeUpdate();
//
//                JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
//                kosong();
//                tampil();
//            }
//        } catch(Exception e) {
//            JOptionPane.showMessageDialog(null, "Data kosong");
//        }
        kosong();
        tampil();
    }//GEN-LAST:event_deleteTableMouseClicked

    private void listEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listEventActionPerformed

    private void listEventFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listEventFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_listEventFocusLost

    private void listEventFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listEventFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_listEventFocusGained

    private void btnregis1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregis1ActionPerformed
validasiRegis();        // TODO add your handling code here:
    }//GEN-LAST:event_btnregis1ActionPerformed

    private void btnregis1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnregis1KeyPressed
validasiRegis();        // TODO add your handling code here:

    }//GEN-LAST:event_btnregis1KeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Function.RoundButton btnregis1;
    private javax.swing.JLabel deleteTable;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel judul4;
    public static final javax.swing.JTextField listEvent = new javax.swing.JTextField();
    private Function.PanelRound tableTanggalLahir;
    private Function.RoundButton update;
    // End of variables declaration//GEN-END:variables

    private void validasiRegis() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/p_visual", "root", "");
            st = con.createStatement();

            String sqlSearch = ("SELECT * FROM event WHERE id=0");
            java.sql.ResultSet rs = st.executeQuery(sqlSearch);
            Boolean strreq = rs.next();
            if (strreq == false) {
            String simpan = "INSERT INTO event(id, Event) VALUES('0', '"+listEvent.getText()+"')";
            int SA = st.executeUpdate(simpan);
            JOptionPane.showMessageDialog(null, "Submit Event Berhasil");
            tampil();
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Data kosong");
        }
        kosong();
        tampil();
    }

     private void updateEvemt() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/p_visual", "root", "");
            st = con.createStatement();

            String sqlSearch = ("SELECT * FROM event WHERE id=0");
            java.sql.ResultSet rs = st.executeQuery(sqlSearch);
            Boolean strreq = rs.next();

            String sqldata = "update event set Event=? where id=0";
            PreparedStatement stat = con.prepareStatement(sqldata);
            stat.setString(1, listEvent.getText().toString());
            stat.executeUpdate();
                
            JOptionPane.showMessageDialog(null, "Successfully Update");
            tampil();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
            JOptionPane.showMessageDialog(null, "Data kosong");
        }
        kosong();
        tampil();
    }
     
    String nama = "";
    int id = 0;
     private void data(){
        con = new KoneksiDatabase().connect();
        String sql = "SELECT * FROM muskel LIMIT 1;";
        
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {                
                nama = rs.getString(MuskelDatabase.NAMA);
                id = rs.getInt(MuskelDatabase.ID);
            }
            
            listEvent.setText(nama);
        } catch (SQLException ex) {
            Logger.getLogger(selectListEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
        
}
